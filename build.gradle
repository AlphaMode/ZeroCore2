plugins {
    id 'fabric-loom' version '0.12-SNAPSHOT'
    id 'maven-publish'
    id 'io.github.juuxel.loom-quiltflower' version '1.+'
    id 'org.quiltmc.quilt-mappings-on-loom' version '4.+'
}

file('build.properties').withReader {

    def properties = new Properties()
	
    properties.load(it)
    project.ext.config = new ConfigSlurper().parse properties
}

version = "${config.minecraft_version}-${config.mod_version_major}.${config.mod_version_minor}.${config.mod_version_patch}"
group = 'it.zerono.mods.zerocore'
archivesBaseName = 'ZeroCore2'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

processResources {

	inputs.property "mod_version", version
	inputs.property "mod_name", config.mod_name
    inputs.property "minecraft_versionrange", config.minecraft_versionrange
	inputs.property "forge_versionrange", config.forge_versionrange
    inputs.property "loader_versionrange", config.loader_versionrange

    from(sourceSets.main.resources.srcDirs) {
	
        include 'ZeroCore2-1.18/src/main/resources/META-INF/mods.toml'
        expand 'mod_version': version, 
				'mod_name': config.mod_name,
				'minecraft_versionrange': config.minecraft_versionrange,
				'forge_versionrange': config.forge_versionrange,
                'loader_versionrange': config.loader_versionrange
    }
}

repositories {
    mavenCentral()
    mavenLocal()
    maven { url = "https://api.modrinth.com/maven" }
    maven { url = "https://cursemaven.com" }
    maven { url = "https://maven.parchmentmc.org" }
    maven { url = "https://maven.fabricmc.net/" }
    maven { url = "https://maven.tterrag.com/" }
    maven { url = "https://storage.googleapis.com/devan-maven/" }
    maven { url = "https://maven.shedaniel.me/" }
    maven { url = "https://aperlambda.github.io/maven" }
    maven { url = "https://ladysnake.jfrog.io/artifactory/mods" }
    maven { url = "https://maven.kotlindiscord.com/repository/terraformers/" }
    maven { url = "https://mvn.devos.one/releases/" }
    maven { url = "https://mvn.devos.one/snapshots/" }
    maven { url = "https://maven.terraformersmc.com/" }
    maven { url = "https://maven.cafeteria.dev" }
    maven { url = "https://jitpack.io/" }
    maven { url = "https://maven.jamieswhiteshirt.com/libs-release" }
    maven { url = "https://maven.vram.io/" }
    // patchouli
    maven {
        url 'https://maven.blamejared.com'
    }
}

dependencies {
    // dev env
    minecraft("com.mojang:minecraft:${config.minecraft_version}")
    mappings loom.layered {
        it.addLayer(quiltMappings.mappings("org.quiltmc:quilt-mappings:1.18.2+build.22:v2")) // https://lambdaurora.dev/tools/import_quilt.html
        it.parchment("org.parchmentmc.data:parchment-1.18.2:BLEEDING-20220313.132143-1@zip") // https://ldtteam.jfrog.io/ui/native/parchmentmc-public/org/parchmentmc/data/parchment-1.18.1/BLEEDING-SNAPSHOT
        it.officialMojangMappings {
            setNameSyntheticMembers(false)
        }
    }
    modImplementation("net.fabricmc:fabric-loader:${config.loader_version}")
    modImplementation("me.shedaniel.cloth:cloth-config-fabric:${config.cloth_config_version}") { exclude(group: "net.fabricmc.fabric-api") }
    modApi("me.shedaniel.cloth:basic-math:0.6.0")
    modImplementation("com.terraformersmc:modmenu:${config.modmenu_version}")
    modCompileOnly("me.shedaniel:RoughlyEnoughItems-api-fabric:${config.rei_version}") { transitive = false }
    modImplementation("me.shedaniel:RoughlyEnoughItems-fabric:${config.rei_version}") { transitive = false }
    modImplementation("dev.architectury:architectury-fabric:${config.architectury_version}")
    runtimeOnly("maven.modrinth:lazydfu:0.1.2")
    modRuntimeOnly("curse.maven:xl-packets-fabric-390168:3527187") { transitive = false }
    modRuntimeOnly("maven.modrinth:lithium:mc1.18.2-0.7.9")
//    modImplementation("vazkii.botania:Botania:1.18.1-428-FABRIC-SNAPSHOT")

    // dependencies
    modImplementation("net.fabricmc.fabric-api:fabric-api:${config.fabric_version}")

    modImplementation(include("io.github.fabricators_of_create:Porting-Lib:0.1.0-interfacent+1.18.2-faceless.${config.port_lib_hash}"))
    modImplementation(include("me.alphamode:ForgeTags:${config.forge_tags_version}"))
    modImplementation(include("com.electronwill.night-config:core:${config.night_config_core_version}"))
    modImplementation(include("com.electronwill.night-config:toml:${config.night_config_toml_version}"))
    modImplementation(include("curse.maven:forge-config-api-port-fabric-547434:${config.config_api_id}")) { transitive = false }
    modImplementation(include("com.jamieswhiteshirt:reach-entity-attributes:${config.reach_entity_attributes_version}"))
    modImplementation(include("dev.cafeteria:fake-player-api:${config.fake_player_api_version}"))
    modImplementation(include("io.github.tropheusj:milk-lib:${config.milk_lib_version}"))
    implementation(include("com.google.code.findbugs:jsr305:${config.jsr305_version}"))

    include modApi('teamreborn:energy:2.2.0') {
        exclude(group: "net.fabricmc.fabric-api")
    }
}

loom.accessWidenerPath = file("src/main/resources/zerocore.accesswidener")

jar {

	//classifier = 'universal'
	finalizedBy 'reobfJar'

    manifest {
        attributes 'Specification-Title': config.mod_name
        attributes 'Specification-Vendor': 'ZeroNoRyouki'
        attributes 'Specification-Version': "2"
        attributes 'Implementation-Title': config.mod_name
        attributes 'Implementation-Vendor': 'ZeroNoRyouki'
        attributes 'Implementation-Version': version
        attributes 'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
    }	
}

publish.dependsOn('reobfJar')

publishing {

    publications {
        mavenJava(MavenPublication) {
            artifactId = archivesBaseName
            artifact jar
        }
    }
	
	repositories {
        maven {
            url "file:///${rootProject.projectDir}/../Maven"
        }
    }
}
